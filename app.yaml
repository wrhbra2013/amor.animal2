 # /home/wander/amor.animal2/app.yaml
 runtime: nodejs20  # Or the Node.js version you are using (e.g., nodejs18)
 instance_class: F1 # This is a basic, cost-effective instance class. Choose based on your needs.
 service: default   # You can name your service if you have multiple.
 
 env_variables:
   NODE_ENV: 'production'
   # IMPORTANT: Replace with your actual strong secret or use Google Secret Manager
   SESSION_SECRET: '@admin'
   # Database credentials (replace with your actual values or use Secret Manager)
   DB_USER: 'root' # Your Cloud SQL username
   DB_PASSWORD: 'W@nd3r2025mysql@' # Your Cloud SQL password
   DB_NAME: 'espelho' # Your database name
   # This is the connection string for Cloud SQL via Unix Sockets (recommended)
   # Replace YOUR_PROJECT_ID, YOUR_REGION, and YOUR_INSTANCE_ID accordingly
   DB_SOCKET_PATH: '/cloudsql/amoranimalmarilia2025:southamerica-east1:root '
   # DB_HOST: # Not needed if using DB_SOCKET_PATH
   # DB_PORT: # Not needed if using DB_SOCKET_PATH
   # DB_CONNECTION_LIMIT: '5' # Optional, if your database.js uses it
 
 handlers:
   # Serve static files from the 'static' directory
   - url: /static
     static_dir: static
     secure: always # Redirect HTTP to HTTPS
 
   # Serve uploaded files from 'static/uploads'
   # Note: For dynamic user uploads that need to persist, Google Cloud Storage is better.
   # This configuration serves files that are part_of_your_deployment_package.
   - url: /static/uploads
     static_dir: static/uploads # Assuming your 'uploads' folder is inside 'static'
     secure: always
 
   # All other requests are handled by your Node.js application (index.js)
   - url: /.*
     script: auto
     secure: always
 
 # Settings for connecting to Google Cloud SQL
 beta_settings:
   # Replace with your Cloud SQL instance connection name
   cloud_sql_instances: " amoranimalmarilia2025:southamerica-east1:root "
 
 # Optional: Automatic scaling settings (good for cost-effectiveness)
 automatic_scaling:
   min_instances: 0       # Can scale down to 0 instances to save costs when no traffic
   max_instances: 1       # Start with 1 and adjust based on traffic
   target_cpu_utilization: 0.65 # Target CPU utilization for scaling
   # You can also add other scaling metrics like target_throughput_utilization or min_pending_latency   max_pending_latency: automatic
   
# Conectar-se a esta instância do CLOUD SQL
# Nome da conexão
# amoranimalmarilia2025:southamerica-east1:root 
# Conectividade de IP particular
# Desativado
# Conectividade de IP público
# Ativado
# Endereço IP público
# 34.95.174.45 
# Número de porta padrão do banco de dados TCP
# 3306 