 <%- include("_header") -%> <%# Inclui o cabeçalho padrão %>
 
 <div class="container mt-4 mb-5">
 
     <% 
     // Determina o nome de exibição para o tipo de item
     const itemTypeName = typeof tabela !== 'undefined' && tabela ? tabela.charAt(0).toUpperCase() + tabela.slice(1) : 'Item';
     
     // Assume que 'model' é um objeto único para esta página de detalhes/edição
     // Determina um nome de exibição para o próprio item
     const currentItemId = typeof id !== 'undefined' ? id : (model && model.id ? model.id : null);
     const displayName = model && (model.nome || model.titulo || model.pet || model.empresa || model.nomePet || (currentItemId ? `ID: ${currentItemId}` : 'Detalhes'));
     %>
 
     <%# Verifica se 'model' é um objeto válido com propriedades e se currentItemId existe %> 
     <% if (typeof model !== 'undefined' && model && Object.keys(model).length > 0 && currentItemId) { %>
         <div class="card shadow-sm">
             <div class="card-header bg-primary text-white d-flex justify-content-between align-items-center">
                 <h4 class="mb-0">Detalhes de <%= itemTypeName %>: <%= displayName %></h4>
                 <% if (tabela) { %>
                     <a href="/<%= tabela %>" class="btn btn-light btn-sm" title="Voltar para a lista de <%= itemTypeName %>">
                         <i class="fas fa-arrow-left"></i> Voltar
                     </a>
                 <% } %>
             </div>
             <div class="card-body">
                 <div class="row">
                     <% 
                     let hasImage = false;
                     let imagePath = '';
                     // Verifica se o item tem uma propriedade 'arquivo' (arquivo/imagem) e se 'tabela' está definida
                     if (model.hasOwnProperty('arquivo') && model.arquivo && typeof tabela !== 'undefined' && tabela) {
                         const uploadFoldersMap = {
                             'adocao': 'adocao',
                             'adotado': 'adotado',
                             'procura_se': 'procura_se',
                             'home': 'home',
                             'parceria': 'parceria'
                             // Adicione outros mapeamentos de tabela para pasta conforme necessário
                         };
                         const uploadFolder = uploadFoldersMap[tabela.toLowerCase()] || tabela.toLowerCase();
                         imagePath = `/static/uploads/${uploadFolder}/${model.arquivo}`;
                         hasImage = true;
                     }
                     %>
 
                     <%# Coluna da Imagem: Exibe se uma imagem existir %>
                     <% if (hasImage) { %>
                         <div class="col-md-4 text-center mb-3 mb-md-0">
                             <img src="<%= imagePath %>" 
                                  alt="Imagem de <%= displayName || itemTypeName %>" 
                                  class="img-fluid rounded shadow-sm" 
                                  style="max-height: 350px; object-fit: contain; border: 1px solid #dee2e6;">
                         </div>
                     <% } %>
                     
                     <%# Coluna de Detalhes: Ocupa a largura total se não houver imagem, ou a largura restante se houver imagem %>
                     <div class="<%= hasImage ? 'col-md-8' : 'col-md-12' %>">
                         <div class="table-responsive">
                             <table class="table table-sm table-borderless item-details-table"> <%# Tabela para detalhes %>
                                 <tbody>
                                     <% for (const key in model) { %>
                                         <% if (model.hasOwnProperty(key)) { %> 
                                             <%# Pula a exibição da chave 'arquivo' novamente se a imagem já foi mostrada %>
                                             <% if (hasImage && key === 'arquivo') continue; %>
         
                                             <tr>
                                                 <th scope="row" class="text-capitalize fw-medium" style="width: 30%; vertical-align: top; padding-right: 1rem;">
                                                     <%= key.replace(/_/g, ' ') %>
                                                 </th>
                                                 <td style="vertical-align: top;">
                                                     <% 
                                                     const value = model[key];
                                                     const valueStr = String(value); // Para facilitar verificações de string
                                                     const lowerKey = key.toLowerCase();
             
                                                     if (value === null || typeof value === 'undefined' || valueStr.trim() === '') { %>
                                                         <span class="text-muted fst-italic">Não informado</span>
                                                     <% } else if (typeof value === 'boolean') { %>
                                                         <span class="badge bg-<%= value ? 'success' : 'secondary' %>"><%= value ? 'Sim' : 'Não' %></span> 
                                                     <% } else if ((lowerKey.includes('data') || ['origem', 'agenda', 'nascimento', 'criado_em', 'atualizado_em', 'data_adocao'].includes(lowerKey)) && value) {
                                                         try {
                                                             const date = new Date(value);
                                                             if (!isNaN(date.getTime()) && date.getFullYear() > 1970) { 
                                                                 const options = { year: 'numeric', month: 'long', day: 'numeric' }; 
                                                                 if (date.getHours() > 0 || date.getMinutes() > 0 || date.getSeconds() > 0) {
                                                                     options.hour = '2-digit';
                                                                     options.minute = '2-digit';
                                                                 }
                                                                 %> <%= date.toLocaleDateString('pt-BR', options) %> <%
                                                             } else { %> <%= value %> <% }
                                                         } catch (e) { %> <%= value %> <% }
                                                     } else if (typeof value === 'string' && (valueStr.startsWith('http://') || valueStr.startsWith('https://'))) { %>
                                                         <a href="<%= valueStr %>" target="_blank" rel="noopener noreferrer" title="Abrir link: <%= valueStr %>"><%= valueStr %></a>
                                                     <% } else if (typeof value === 'string' && valueStr.includes('@') && valueStr.includes('.') && !valueStr.includes(' ')) { // Detecção simples de email (sem espaços) %>
                                                         <a href="mailto:<%= valueStr %>" title="Enviar email para: <%= valueStr %>"><%= valueStr %></a>
                                                     <% } else if (typeof value === 'string' && (lowerKey.includes('telefone') || lowerKey.includes('whatsapp') || lowerKey.includes('contato')) && /^[0-9()+\-.\s]+$/.test(valueStr) && valueStr.replace(/\D/g, '').length >= 8) { // Detecção de número de telefone
                                                         const telLink = `tel:${valueStr.replace(/[^\d+]/g, '')}`; // Limpa para o link tel:
                                                     %>
                                                         <a href="<%= telLink %>" title="Ligar para: <%= valueStr %>"><%= valueStr %></a>
                                                     <% } else if (Array.isArray(value)) { %>
                                                         <% if (value.length > 0) { %>
                                                             <ul class="list-unstyled mb-0 ps-3">
                                                                 <% value.forEach(arrItem => { %>
                                                                     <li>- <%= arrItem %></li>
                                                                 <% }); %>
                                                             </ul>
                                                         <% } else { %>
                                                             <span class="text-muted fst-italic">Lista vazia</span>
                                                         <% } %>
                                                     <% } else if (typeof value === 'object' && value !== null) { // Trata objetos genéricos
                                                         %> <pre class="mb-0 p-2 rounded" style="white-space: pre-wrap; word-break: break-all; font-size: 0.875em; background-color: #f8f9fa;"><%= JSON.stringify(value, null, 2) %></pre> <%
                                                     } else { // Exibição padrão para outros tipos (números, strings não capturadas acima)
                                                     %>
                                                         <%= value %>
                                                     <% } %>
                                                 </td>
                                             </tr>
                                         <% } %>
                                     <% } %>
                                 </tbody>
                             </table>
                         </div>
                     </div>
                 </div>
             </div>
             <div class="card-footer bg-light d-flex justify-content-end align-items-center gap-2 py-3">
                                
                 
                

 
                 <%# Botão Deletar %>
                 <% if (tabela && currentItemId) { %>
                     <%
                     let deleteActionUrl = `/${tabela}/delete/${currentItemId}`;
                     if (model.hasOwnProperty('arquivo') && model.arquivo && ['parceria', 'adocao', 'home', 'procura_se', 'adotado'].includes(tabela.toLowerCase())) { 
                         deleteActionUrl += `/${encodeURIComponent(model.arquivo)}`;
                     }
                     %>
                     <form action="<%= deleteActionUrl %>" method="POST" class="d-inline" onsubmit="return confirm('Tem certeza que deseja deletar este registro? Esta ação não pode ser desfeita.');">
                         <%# Se você usa method-override para tratar requisições DELETE via formulários POST %>
                         <%# <input type="hidden" name="_method" value="DELETE"> %>
                         <button type="submit" class="btn btn-danger btn-sm" title="Deletar Registro">
                             <i class="fas fa-trash-alt"></i> Deletar
                         </button>
                     </form>
                 <% } %>
 
                 <%# Botão para imprimir a visualização HTML atual %>
                 <button type="button" class="btn btn-info btn-sm" onclick="window.print()" title="Imprimir esta página">
                     <i class="fas fa-print"></i> Imprimir
                 </button>
             </div>
         </div>
 
     <% } else { %>
         <%# Mensagem se não houver dados disponíveis ou o item não for encontrado %>
         <div class="alert alert-warning text-center" role="alert">
             Nenhum dado disponível para exibir para <strong><%= itemTypeName %></strong>.
             <% if (model && model.message) { // Se o próprio model contiver uma mensagem de erro %>
                 <br><span class="fst-italic"><%= model.message %></span>
             <% } else if (!currentItemId && (typeof model === 'undefined' || (model && Object.keys(model).length === 0))) { %>
                 <br><span class="fst-italic">O item solicitado não foi encontrado ou não possui um ID válido.</span>
             <% } %>
         </div>
         <div class="text-center">
             <% if (tabela) { %>
                 <a href="/<%= tabela %>" class="btn btn-primary">Voltar para <%= itemTypeName %></a>
             <% } else { %>
                  <a href="/" class="btn btn-primary">Voltar para Home</a>
             <% } %>
         </div>
     <% } %>
 </div>
 
 <%- include("_footer") -%> <%# Inclui o rodapé padrão %>
 